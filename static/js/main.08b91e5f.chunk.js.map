{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styled.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["FeedbackButtonBtn","styled","button","NameSpan","span","ListDiv","div","ItemButtonLi","li","FeedbackOptions","options","onLeaveFeedback","map","option","type","id","onClick","SectionStyled","section","TitleH1","h1","Section","title","children","ItemLi","ItemP","p","TitleH2","Notification","message","Statistics","props","stats","Object","keys","total","stat","App","state","good","neutral","bad","countPositiveFeedback","result","parseInt","toFixed","countTotalFeedback","values","reduce","counter","value","e","key","target","setState","prevState","this","positivePercentage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08b91e5f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FeedbackButtonBtn = styled.button`\n  background-color: antiquewhite;\n  padding: 10px;\n  min-width: 150px;\n  height: 50px;\n  font-size: 18px;\n  margin: 20px;\n  border-radius: 20px;\n  filter: drop-shadow(2px 4px 6px black);\n`;\n\nexport const NameSpan = styled.span`\n  display: block;\n  text-transform: capitalize;\n  pointer-events: none;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const ListDiv = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const ItemButtonLi = styled.li`\n  list-style: none;\n  margin: 5px;\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  FeedbackButtonBtn,\n  NameSpan,\n  ListDiv,\n  ItemButtonLi,\n} from \"./FeedbackOptions.styled\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ListDiv>\n      {options.map((option) => (\n        <ItemButtonLi key={option}>\n          <FeedbackButtonBtn\n            type=\"button\"\n            id={option}\n            onClick={onLeaveFeedback}\n          >\n            <NameSpan>{option}</NameSpan>\n          </FeedbackButtonBtn>\n        </ItemButtonLi>\n      ))}\n    </ListDiv>\n  );\n};\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.oneOf([\"good\", \"neutral\", \"bad\"]))\n    .isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const SectionStyled = styled.section`\n  width: 50%;\n  margin: auto;\n  text-align: center;\n`;\n\nexport const TitleH1 = styled.h1`\n  color: tomato;\n  font-size: 40px;\n  margin-bottom: 50px;\n`;\n","import { SectionStyled, TitleH1 } from \"./Section.styled\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <TitleH1>{title}</TitleH1>\n      {children}\n    </SectionStyled>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ListDiv = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const ItemLi = styled.li`\n  list-style: none;\n  margin: 5px;\n  background-color: lightgray;\n  border: 2px solid grey;\n  min-width: 120px;\n  font-size: 18px;\n  width: auto;\n`;\n\nexport const ItemP = styled.p`\n  padding: 10px;\n  margin: 0 20px;\n  font-weight: 700;\n  font-size: 28px;\n`;\n\nexport const NameSpan = styled.span`\n  display: block;\n  pointer-events: none;\n  font-weight: 500;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const SectionStyled = styled.section`\n  width: 50%;\n  margin: auto;\n  text-align: center;\n`;\n\nexport const TitleH2 = styled.h1`\n  color: teal;\n  font-size: 30px;\n  margin-bottom: 50px;\n`;\n","import { SectionStyled, TitleH2 } from \"./Notification.styled\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return (\n    <SectionStyled>\n      <TitleH2>{message}</TitleH2>\n    </SectionStyled>\n  );\n};\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { ItemLi, ItemP, ListDiv, NameSpan } from './Statistics.styled';\nimport Notification from '../Notification';\n\nconst Statistics = props => {\n  const stats = Object.keys(props);\n  return (\n    <>\n      {props.total > 0 && (\n        <ListDiv>\n          {stats.map(stat => (\n            <ItemLi key={stat}>\n              <ItemP>\n                {stat !== 'positivePercentage' ? stat : 'Positive precentage'}\n                {': '}\n                <NameSpan>\n                  {props[stat]}\n                  {stat === 'positivePercentage' && '%'}\n                </NameSpan>\n              </ItemP>\n            </ItemLi>\n          ))}\n        </ListDiv>\n      )}\n      {props.total === 0 && <Notification message='No feedback' />}\n    </>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Statistics from './Statistics';\n\nexport class App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  countPositiveFeedback = (total, good) => {\n    const result = (parseInt(good) * 100) / total;\n    return total ? parseInt(result.toFixed(0)) : 0;\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((counter, value) => (counter += value), 0);\n  };\n\n  onLeaveFeedback = e => {\n    const key = e.target.id;\n    this.setState(prevState => {\n      return { [key]: ++prevState[key] };\n    });\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedback(total, good);\n    const options = Object.keys(this.state);\n    return (\n      <>\n        <Section title='Please leave feedback'>\n          <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <hr />\n        <Section title='Statistics'>\n          <Statistics good={good} bad={bad} neutral={neutral} total={total} positivePercentage={positivePercentage} />\n        </Section>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}